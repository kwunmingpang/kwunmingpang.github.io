{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    em: \"em\"\n  }, _provideComponents(), props.components), {GridContainer, NextImage} = _components;\n  if (!GridContainer) _missingMdxReference(\"GridContainer\", true);\n  if (!NextImage) _missingMdxReference(\"NextImage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Introduction\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As introduced in my \", _jsx(_components.a, {\n        href: \"/projects\",\n        children: \"project\"\n      }), \" page, I needed an application that can help me to memorize vocabulary and also mobile for me to carry during commute. I decided to make a flashcard application that utilize technology of single page application (SPA) using \", _jsx(_components.a, {\n        href: \"https://angular.io/\",\n        children: \"Angular\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://firebase.google.com/\",\n        children: \"Firebase\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tech choice\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Angular\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Angular is a really powerful framework that encompass all the tools you need for a web app. It definitely has a learning curve, nonetheless after learning the ways in Angular, developing using this framework is very enjoyable.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Firebase\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Firebase provides all the funtionality that I need for this application, and it is relatively easy to use. I consider it as a database for front-end, and the authorization etc. is handled for you. I can simply plug in the Firebase api for authentication, the login and authorization will be handled by firebase therefore it saves a lot of efforts.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Product display\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The most important feature for me is to share data across devices and also be able to efficiently support me to reinforce my learning on the vocabulary.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In the application, different people, depending on the login account, will have their own listing for vocabulary. The access of listing is controled with authentication using api provided by firebase, which means by trying different url, unauthorized access is not allowed even if the url hits.\"\n    }), \"\\n\", _jsxs(GridContainer, {\n      children: [_jsxs(\"div\", {\n        children: [_jsx(NextImage, {\n          src: \"/assets/blog/project-flashcard:02.jpg\",\n          width: 300,\n          height: 400,\n          alt: \"flashcard display on phone\"\n        }), _jsx(_components.p, {\n          children: _jsx(_components.em, {\n            children: \"flashcard app on mobile\"\n          })\n        })]\n      }), _jsxs(\"div\", {\n        children: [_jsx(NextImage, {\n          src: \"/assets/blog/project-flashcard:03.gif\",\n          width: 300,\n          height: 400,\n          alt: \"flashcard display\"\n        }), _jsx(_components.p, {\n          children: _jsx(_components.em, {\n            children: \"flashcard on mobile going to next card by swiping\"\n          })\n        })]\n      }), _jsxs(\"div\", {\n        children: [_jsx(NextImage, {\n          src: \"/assets/blog/project-flashcard:01.png\",\n          width: 300,\n          height: 400,\n          alt: \"flashcard display desktop\"\n        }), _jsx(_components.p, {\n          children: _jsx(_components.em, {\n            children: \"editing vocabular on desktop\"\n          })\n        })]\n      }), _jsxs(\"div\", {\n        children: [_jsx(NextImage, {\n          src: \"/assets/blog/project-flashcard:04.png\",\n          width: 300,\n          height: 400,\n          alt: \"flashcard display\"\n        }), _jsx(_components.p, {\n          children: _jsx(_components.em, {\n            children: \"listing vocabulary on desktop\"\n          })\n        })]\n      }), _jsxs(\"div\", {\n        children: [_jsx(NextImage, {\n          src: \"/assets/blog/project-flashcard:05.png\",\n          width: 300,\n          height: 400,\n          alt: \"flashcard display\"\n        }), _jsx(_components.p, {\n          children: _jsx(_components.em, {\n            children: \"listing different folders of vocabulary on desktop\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The resulting application can sufficiently support my need, although there are definitely more room for improvement. However, for the purpose of reviewing for my exam, this is adequate.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Flash card web-app","date":"2023-11-26","category":"projects"},"scope":{}}},"__N_SSG":true}